{"ast":null,"code":"import _objectSpread from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/src/Image.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as reducer from './store';\nimport axios from 'axios';\nimport { text } from './color';\n\nvar Image =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Image, _Component);\n\n  function Image() {\n    var _this;\n\n    _classCallCheck(this, Image);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Image).call(this));\n\n    _this.level = function () {\n      var _this$state = _this.state,\n          direction = _this$state.direction,\n          level = _this$state.level;\n\n      if (direction) {\n        return _this.setState({\n          level: level >= 5 ? 4 : level + 1,\n          direction: level >= 5 ? true : false\n        });\n      } else {\n        return _this.setState({\n          level: level <= 0 ? 1 : level - 1,\n          direction: level <= 0 ? false : true\n        });\n      }\n    };\n\n    _this.state = {\n      sentence: Array(30).join(text).substr(0, 7000),\n      level: 0,\n      emotion: 'pos',\n      direction: true // true: +1, false: -1\n\n    };\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get('/rgb').then(function (res) {\n        return _this2.setState({\n          rgbList: res.data\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var intervalId = setInterval(this.level, 1000);\n      this.setState({\n        intervalId: intervalId\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var typingStatus = nextProps.typingStatus,\n          word = nextProps.word,\n          sentimental = nextProps.sentimental;\n      var typingNone = this.props.typingNone;\n      var sentence = this.state.sentence;\n      console.log('다음 감정: ', sentimental); // typing이 끝났을 때\n\n      if (typingStatus === 'done') {\n        // 최대 길이를 초과했을 때, 앞의 한 글자 삭제\n        var maxLength = 7000;\n        if (sentence.length >= maxLength) sentence = sentence.substr(1, maxLength); // 1 ~ arg2 까지만 출력. (arg2=7001)\n        // state의 sentence에 새 단어 추가\n\n        this.setState(_objectSpread({\n          sentence: sentence + word\n        }, sentimental)); // store의 typing 상태 변경\n\n        return typingNone();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          rgbList = _this$state2.rgbList,\n          level = _this$state2.level;\n      if (!rgbList) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n      var emotion = this.state.emotion.concat('_img');\n      var colorList = rgbList[emotion][level] ? rgbList[emotion][level].split(':') : rgbList[emotion][0]; // ':'로 rgb 나눔\n\n      var textList = this.state.sentence.split('');\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, textList.map(function (item, i) {\n        return React.createElement(\"div\", {\n          className: \"word\",\n          style: {\n            color: colorList[i]\n          },\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, item);\n      })));\n    }\n  }]);\n\n  return Image;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    typingStatus: state.typingStatus,\n    word: state.word,\n    sentimental: state.sentimental\n  };\n}, function (dispatch) {\n  return {\n    typingNone: bindActionCreators(reducer.typingNone, dispatch)\n  };\n})(Image);","map":{"version":3,"sources":["/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/src/Image.js"],"names":["React","Component","Fragment","connect","bindActionCreators","reducer","axios","text","Image","level","state","direction","setState","sentence","Array","join","substr","emotion","get","then","res","rgbList","data","intervalId","setInterval","nextProps","typingStatus","word","sentimental","typingNone","props","console","log","maxLength","length","concat","colorList","split","textList","textAlign","map","item","i","color","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as reducer from './store';\n\nimport axios from 'axios';\n\nimport { text } from './color';\n\nclass Image extends Component {\n  constructor() {\n    super();\n    this.state = {\n      sentence: (Array(30).join(text)).substr(0, 7000),\n      level: 0,\n      emotion: 'pos',\n      direction: true,    // true: +1, false: -1\n    }\n  }\n\n  componentWillMount() {\n    axios.get('/rgb')\n      .then(res => this.setState({ rgbList: res.data }));\n  }\n\n  componentDidMount() {\n    let intervalId = setInterval(this.level, 1000);\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { typingStatus, word, sentimental } = nextProps;\n    const { typingNone } = this.props;\n    let { sentence } = this.state;\n    console.log('다음 감정: ', sentimental);\n\n    // typing이 끝났을 때\n    if (typingStatus === 'done') {\n      // 최대 길이를 초과했을 때, 앞의 한 글자 삭제\n      const maxLength = 7000;\n      if (sentence.length >= maxLength) sentence = sentence.substr(1, maxLength) // 1 ~ arg2 까지만 출력. (arg2=7001)\n      // state의 sentence에 새 단어 추가\n      this.setState({\n        sentence: sentence + word,\n        ...sentimental\n      })\n\n      // store의 typing 상태 변경\n      return typingNone();\n    }\n  }\n  \n  level = () => {\n    const { direction, level } = this.state;\n    if (direction) {\n      return this.setState({\n        level: (level >= 5) ? 4 : level + 1,\n        direction: (level >= 5) ? true : false,\n      })\n    } else {\n      return this.setState({\n        level: (level <= 0) ? 1 : level - 1,\n        direction: (level <= 0) ? false : true,\n      })\n    }\n  }\n\n  render() {\n    const { rgbList, level } = this.state;\n\n    if (!rgbList) return <div />;\n    const emotion = this.state.emotion.concat('_img');\n    const colorList = (rgbList[emotion][level]) ? rgbList[emotion][level].split(':') : rgbList[emotion][0]; // ':'로 rgb 나눔\n    const textList = this.state.sentence.split('');\n    return (\n      <Fragment>\n        <div style={{ textAlign: 'left', }}>\n          {textList.map((item, i) => (\n            <div className=\"word\" style={{\n              color: colorList[i],\n            }} key={i}>{item}</div>\n          ))}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    typingStatus: state.typingStatus,\n    word: state.word,\n    sentimental: state.sentimental,\n  }),\n  dispatch => ({\n    typingNone: bindActionCreators(reducer.typingNone, dispatch)\n  })\n)(Image);\n"]},"metadata":{},"sourceType":"module"}