{"ast":null,"code":"import _defineProperty from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _handleActions;\n\nimport { handleActions, createAction } from 'redux-actions'; // import { text } from './color';\n\nvar initialState = {\n  typingStatus: 'none',\n  // typing, done, none\n  newSentence: false,\n  word: '',\n  sentence: '',\n  buffer: [],\n  sentimental: {\n    emotion: 'pos',\n    // pos, neg\n    level: 0 // 0 - 5\n\n  }\n};\nvar TYPING_DONE = 'TYPING_DONE';\nvar TYPING_ING = 'TYPING_ING';\nvar TYPING_NONE = 'TYPING_NONE';\nvar SET_NEXT_SENTENCE = 'SET_NEXT_SENTENCE';\nvar FETCH_SENTENCE = 'FETCH_SENTENCE';\nvar ADD_SENTENCE = 'ADD_SENTENCE';\nexport var typingDone = createAction(TYPING_DONE);\nexport var typingIng = createAction(TYPING_ING); // payload: word\n\nexport var typingNone = createAction(TYPING_NONE);\nexport var addSentence = createAction(ADD_SENTENCE); // payload: sentence\n\nexport var fetchSentence = createAction(FETCH_SENTENCE);\nexport var setNextSentence = createAction(SET_NEXT_SENTENCE); // payload: sentence\n\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, TYPING_DONE, function (state) {\n  return _objectSpread({}, state, {\n    typingStatus: 'done'\n  });\n}), _defineProperty(_handleActions, TYPING_ING, function (state, action) {\n  return _objectSpread({}, state, {\n    typingStatus: 'typing',\n    word: action.payload\n  });\n}), _defineProperty(_handleActions, TYPING_NONE, function (state) {\n  return _objectSpread({}, state, {\n    typingStatus: 'none',\n    word: ''\n  });\n}), _defineProperty(_handleActions, SET_NEXT_SENTENCE, function (state) {\n  return _objectSpread({}, state, {\n    sentence: state.buffer[0],\n    buffer: state.buffer.slice(1),\n    newSentence: true\n  });\n}), _defineProperty(_handleActions, FETCH_SENTENCE, function (state) {\n  return _objectSpread({}, state, {\n    newSentence: false\n  });\n}), _defineProperty(_handleActions, ADD_SENTENCE, function (state, action) {\n  return _objectSpread({}, state, {\n    buffer: state.buffer.concat(action.payload.sentence),\n    sentimental: action.payload.sentimental\n  });\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/yoonmee/Downloads/KHUVELOPER-frontend-master/src/store.js"],"names":["handleActions","createAction","initialState","typingStatus","newSentence","word","sentence","buffer","sentimental","emotion","level","TYPING_DONE","TYPING_ING","TYPING_NONE","SET_NEXT_SENTENCE","FETCH_SENTENCE","ADD_SENTENCE","typingDone","typingIng","typingNone","addSentence","fetchSentence","setNextSentence","state","action","payload","slice","concat"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C,C,CACA;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,MADK;AACK;AACxBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,MAAM,EAAE,EALW;AAMnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,KADE;AACS;AACpBC,IAAAA,KAAK,EAAE,CAFI,CAEG;;AAFH;AANM,CAArB;AAYA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,WAAW,GAAG,aAApB;AAEA,IAAMC,iBAAiB,GAAG,mBAA1B;AACA,IAAMC,cAAc,GAAG,gBAAvB;AACA,IAAMC,YAAY,GAAG,cAArB;AAEA,OAAO,IAAMC,UAAU,GAAGhB,YAAY,CAACU,WAAD,CAA/B;AACP,OAAO,IAAMO,SAAS,GAAGjB,YAAY,CAACW,UAAD,CAA9B,C,CAA+C;;AACtD,OAAO,IAAMO,UAAU,GAAGlB,YAAY,CAACY,WAAD,CAA/B;AAEP,OAAO,IAAMO,WAAW,GAAGnB,YAAY,CAACe,YAAD,CAAhC,C,CAAkD;;AACzD,OAAO,IAAMK,aAAa,GAAGpB,YAAY,CAACc,cAAD,CAAlC;AACP,OAAO,IAAMO,eAAe,GAAGrB,YAAY,CAACa,iBAAD,CAApC,C,CAA2D;;AAElE,eAAed,aAAa,uDACzBW,WADyB,EACX,UAACY,KAAD;AAAA,2BACVA,KADU;AAEbpB,IAAAA,YAAY,EAAE;AAFD;AAAA,CADW,mCAKzBS,UALyB,EAKZ,UAACW,KAAD,EAAQC,MAAR;AAAA,2BACTD,KADS;AAEZpB,IAAAA,YAAY,EAAE,QAFF;AAGZE,IAAAA,IAAI,EAAEmB,MAAM,CAACC;AAHD;AAAA,CALY,mCAUzBZ,WAVyB,EAUX,UAACU,KAAD;AAAA,2BACVA,KADU;AAEbpB,IAAAA,YAAY,EAAE,MAFD;AAGbE,IAAAA,IAAI,EAAE;AAHO;AAAA,CAVW,mCAezBS,iBAfyB,EAeL,UAACS,KAAD;AAAA,2BAChBA,KADgB;AAEnBjB,IAAAA,QAAQ,EAAEiB,KAAK,CAAChB,MAAN,CAAa,CAAb,CAFS;AAGnBA,IAAAA,MAAM,EAAEgB,KAAK,CAAChB,MAAN,CAAamB,KAAb,CAAmB,CAAnB,CAHW;AAInBtB,IAAAA,WAAW,EAAE;AAJM;AAAA,CAfK,mCAqBzBW,cArByB,EAqBR,UAACQ,KAAD;AAAA,2BACbA,KADa;AAEhBnB,IAAAA,WAAW,EAAE;AAFG;AAAA,CArBQ,mCAyBzBY,YAzByB,EAyBV,UAACO,KAAD,EAAQC,MAAR;AAAA,2BACXD,KADW;AAEdhB,IAAAA,MAAM,EAAEgB,KAAK,CAAChB,MAAN,CAAaoB,MAAb,CAAoBH,MAAM,CAACC,OAAP,CAAenB,QAAnC,CAFM;AAGdE,IAAAA,WAAW,EAAEgB,MAAM,CAACC,OAAP,CAAejB;AAHd;AAAA,CAzBU,oBA8BzBN,YA9ByB,CAA5B","sourcesContent":["import { handleActions, createAction } from 'redux-actions';\n// import { text } from './color';\n\nconst initialState = {\n  typingStatus: 'none',   // typing, done, none\n  newSentence: false,\n  word: '',\n  sentence: '',\n  buffer: [],\n  sentimental: {\n    emotion: 'pos',     // pos, neg\n    level: 0,     // 0 - 5\n  }\n}\n\nconst TYPING_DONE = 'TYPING_DONE';\nconst TYPING_ING = 'TYPING_ING';\nconst TYPING_NONE = 'TYPING_NONE';\n\nconst SET_NEXT_SENTENCE = 'SET_NEXT_SENTENCE';\nconst FETCH_SENTENCE = 'FETCH_SENTENCE';\nconst ADD_SENTENCE = 'ADD_SENTENCE';\n\nexport const typingDone = createAction(TYPING_DONE);\nexport const typingIng = createAction(TYPING_ING);    // payload: word\nexport const typingNone = createAction(TYPING_NONE);\n\nexport const addSentence = createAction(ADD_SENTENCE);   // payload: sentence\nexport const fetchSentence = createAction(FETCH_SENTENCE); \nexport const setNextSentence = createAction(SET_NEXT_SENTENCE);   // payload: sentence\n\nexport default handleActions({\n  [TYPING_DONE]: (state) => ({\n    ...state,\n    typingStatus: 'done',\n  }),\n  [TYPING_ING]: (state, action) => ({\n    ...state,\n    typingStatus: 'typing',\n    word: action.payload,\n  }),\n  [TYPING_NONE]: (state) => ({\n    ...state,\n    typingStatus: 'none',\n    word: '',\n  }),\n  [SET_NEXT_SENTENCE]: (state) => ({\n    ...state,\n    sentence: state.buffer[0],\n    buffer: state.buffer.slice(1),\n    newSentence: true,\n  }),\n  [FETCH_SENTENCE]: (state) => ({\n    ...state,\n    newSentence: false,\n  }),\n  [ADD_SENTENCE]: (state, action) => ({\n    ...state,\n    buffer: state.buffer.concat(action.payload.sentence),\n    sentimental: action.payload.sentimental,\n  })\n}, initialState)"]},"metadata":{},"sourceType":"module"}